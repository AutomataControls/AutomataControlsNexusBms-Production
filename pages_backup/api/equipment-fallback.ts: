import type { NextApiRequest, NextApiResponse } from 'next'

export default async function handler(req: NextApiRequest, res: NextApiResponse) {
  if (req.method !== 'POST') {
    return res.status(405).json({ error: 'Method not allowed' })
  }

  try {
    const { locationId, equipmentId } = req.body

    // Make HTTP requests to your InfluxDB directly here
    const INFLUXDB_URL = "http://localhost:8181"
    const INFLUXDB_DATABASE = "Locations"

    const metricsQuery = `SELECT * FROM "metrics"
                          WHERE "equipmentId"='${equipmentId}'
                          AND time > now() - INTERVAL '5 minutes'
                          ORDER BY time DESC LIMIT 1`

    const response = await fetch(`${INFLUXDB_URL}/api/v3/query_sql`, {
      method: "POST",
      headers: { "Content-Type": "application/json" },
      body: JSON.stringify({
        q: metricsQuery,
        db: INFLUXDB_DATABASE
      }),
    })

    const data = await response.json()
    
    // Process the data
    const metrics = {}
    if (Array.isArray(data) && data.length > 0) {
      const row = data[0]
      Object.entries(row).forEach(([key, value]) => {
        if (key !== 'time' && !key.startsWith('_')) {
          metrics[key] = value
        }
      })
    }

    res.status(200).json({ metrics })
  } catch (error) {
    console.error('API error:', error)
    res.status(500).json({ error: 'Failed to fetch data' })
  }
}
